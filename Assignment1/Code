import cv2,time
from google.colab import drive
#from PIL import Image
#from IPython.display import Image
from google.colab.patches import cv2_imshow
import numpy as np
drive.mount('/content/gdrive',force_remount=True)
path='/content/gdrive/MyDrive/deep_learning/assignment1/'
face_cascade = cv2.CascadeClassifier(cv2.samples.findFile(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'))
imgs=[]
faces=[]
for x in range(3):
  imgs.append(cv2.imread(path+'exp'+str(x+1)+'.jpg',cv2.IMREAD_COLOR))
  faces.append(face_cascade.detectMultiScale(imgs[x]))
img1_blur=imgs[0].copy()
img2_blur=imgs[1].copy()
img3_blur=imgs[2].copy()
for (x,y,w,h) in faces[0]:
  img1_blur[y:y+h,x:x+w]=cv2.blur(img1_blur[y:y+h,x:x+w],(50,50))
for (x,y,w,h) in faces[1]:
  img2_blur[y:y+h,x:x+w]=cv2.blur(img2_blur[y:y+h,x:x+w],(50,50))
for (x,y,w,h) in faces[2]:
  img3_blur[y:y+h,x:x+w]=cv2.blur(img3_blur[y:y+h,x:x+w],(50,50))
cv2_imshow(imgs[0])
print('expression #1')
cv2_imshow(img1_blur)
print('blurred face of expression #1')
cv2_imshow(imgs[1])
print('expression #2')
cv2_imshow(img2_blur)
print('blurred face of expression #2')
cv2_imshow(imgs[2])
print('expression #3')
cv2_imshow(img3_blur)
print('blurred face of expression #3')
